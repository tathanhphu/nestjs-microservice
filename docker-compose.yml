version: '3'
services:
  api-gateway:
    build: ./api-gateway
    restart: always
    hostname: api-gateway
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
    links:
      - log-service
  product-service:
    build: ./product-service
    restart: always
    hostname: product-service
    env_file:
      - .env
    networks:
      - backend
    links:
      - db-product
      - log-service
  log-service:
    build: ./log-service
    restart: always
    hostname: log-service
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./logs:/var/www/log-service/logs
    links:
      - db-user-experience
  db-product:
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./database/product/db-files:/data/db"
      - "./database/product/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - backend
  db-user-experience:
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./database/user-experience/db-files:/data/db"
      - "./database/user-experience/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27018:27017
    networks:
      - backend
networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure
